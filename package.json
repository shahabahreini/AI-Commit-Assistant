{
  "name": "ai-commit-assistant",
  "displayName": "AI Commit Assistant",
  "description": "Generate meaningful git commit messages using AI (Gemini, Hugging Face, or Ollama) to improve commit quality and consistency",
  "version": "1.1.0",
  "publisher": "ShahabBahreiniJangjoo",
  "icon": "images/logo.png",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "SCM Providers",
    "Other"
  ],
  "extensionDependencies": [
    "vscode.git"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "AI Commit Assistant",
      "properties": {
        "aiCommitAssistant.apiProvider": {
          "type": "string",
          "enum": [
            "gemini",
            "huggingface",
            "ollama",
            "mistral"
          ],
          "enumDescriptions": [
            "Use Google's Gemini AI for generating commit messages",
            "Use Hugging Face models for generating commit messages",
            "Use local Ollama models for generating commit messages",
            "Use Mistral AI for generating commit messages"
          ],
          "default": "huggingface",
          "description": "Select which AI provider to use for generating commit messages",
          "order": 1
        },
        "aiCommitAssistant.debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug mode to show detailed LLM responses and API interactions",
          "order": 2
        },
        "aiCommitAssistant.gemini.apiKey": {
          "type": "string",
          "markdownDescription": "API key for Google's Gemini AI [Learn more](https://aistudio.google.com/app/apikey)",
          "order": 3
        },
        "aiCommitAssistant.huggingface.apiKey": {
          "type": "string",
          "markdownDescription": "API key for Hugging Face [Learn more](https://huggingface.co/settings/tokens)",
          "order": 4
        },
        "aiCommitAssistant.huggingface.model": {
          "type": "string",
          "default": "mistralai/Mistral-7B-Instruct-v0.3",
          "description": "Model ID for Hugging Face",
          "markdownDescription": "Model ID for Hugging Face. [Learn more](https://huggingface.co/models)",
          "examples": [
            "mistralai/Mistral-7B-Instruct-v0.3",
            "facebook/bart-large-cnn",
            "microsoft/DialoGPT-medium"
          ],
          "order": 5
        },
        "aiCommitAssistant.ollama.url": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "URL for Ollama API server",
          "order": 6
        },
        "aiCommitAssistant.ollama.model": {
          "type": "string",
          "default": "phi4",
          "description": "Model name for Ollama",
          "markdownDescription": "Model name for Ollama. [Available models](https://ollama.ai/library)",
          "examples": [
            "mistral",
            "llama2",
            "codellama",
            "phi4",
            "qwen2.5-coder"
          ],
          "order": 7
        },
        "aiCommitAssistant.mistral.apiKey": {
          "type": "string",
          "markdownDescription": "API key for Mistral AI [Learn more](https://console.mistral.ai/api-keys/)",
          "order": 8
        },
        "aiCommitAssistant.mistral.model": {
          "type": "string",
          "default": "mistral-large-latest",
          "description": "Model name for Mistral AI",
          "examples": [
            "mistral-tiny",
            "mistral-small",
            "mistral-medium",
            "mistral-large-latest"
          ],
          "order": 9
        }
      }
    },
    "commands": [
      {
        "command": "ai-commit-assistant.generateCommitMessage",
        "title": "Generate AI Commit Message",
        "category": "AI Commit Assistant",
        "icon": {
          "light": "resources/light/generate.svg",
          "dark": "resources/dark/generate.svg"
        }
      },
      {
        "command": "ai-commit-assistant.toggleDebug",
        "title": "Toggle Debug Mode",
        "category": "AI Commit Assistant"
      },
      {
        "command": "ai-commit-assistant.loadingIndicator",
        "title": "Generating...",
        "icon": {
          "light": "resources/light/loading.svg",
          "dark": "resources/dark/loading.svg"
        }
      },
      {
        "command": "ai-commit-assistant.openSettings",
        "title": "Open Settings UI",
        "category": "AI Commit Assistant",
        "icon": {
          "light": "resources/light/settings.svg",
          "dark": "resources/dark/settings.svg"
        }
      }
    ],
    "menus": {
      "scm/title": [
        {
          "command": "ai-commit-assistant.generateCommitMessage",
          "group": "navigation",
          "when": "scmProvider == git && !ai-commit-assistant.isGenerating"
        },
        {
          "command": "ai-commit-assistant.loadingIndicator",
          "group": "navigation",
          "when": "scmProvider == git && ai-commit-assistant.isGenerating"
        },
        {
          "command": "ai-commit-assistant.openSettings",
          "group": "navigation",
          "when": "scmProvider == git"
        }
      ],
      "commandPalette": [
        {
          "command": "ai-commit-assistant.generateCommitMessage",
          "when": "scmProvider == git"
        },
        {
          "command": "ai-commit-assistant.configureSettings"
        },
        {
          "command": "ai-commit-assistant.toggleDebug"
        },
        {
          "command": "ai-commit-assistant.openSettings",
          "when": "scmProvider == git"
        }
      ],
      "view/title": [
        {
          "command": "ai-commit-assistant.openSettings",
          "group": "navigation",
          "when": "scmProvider == git"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.11.16",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "esbuild": "^0.20.0",
    "eslint": "^8.56.0",
    "npm-run-all": "^4.1.5",
    "typescript": "~5.3.3"
  },
  "dependencies": {
    "@google/generative-ai": "^0.1.3",
    "dotenv": "^16.4.1",
    "node-fetch": "^3.3.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/shahabahreini/AI-Commit-Assistant.git"
  },
  "keywords": [
    "git",
    "commit",
    "ai",
    "gemini",
    "huggingface",
    "ollama",
    "conventional commits",
    "commit message",
    "git message",
    "debug"
  ],
  "author": "Shahab Ahreini",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/shahabahreini/AI-Commit-Assistant/issues"
  },
  "homepage": "https://github.com/shahabahreini/AI-Commit-Assistant#readme"
}
